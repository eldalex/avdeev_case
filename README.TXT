Тестовое задание.
На Django написаны два приложения
1) Составление и прохождение тестов.
2) Управление Подарочными картами.

Функционал:
Приложение прохождения тестов.
1)  В админке можно создавать/удалять/изменять тесты.
2)  Тесты можно создавать как отдельные, так и цепочки, т.е. если при создании теста указать родителя, тест не будет
    Отображаться к прохождению пока родитель не будет полностью пройден.
3)  Вопросы в тестах пропускать нельзя, при обновлении страницы во время тестирования тест начшется сначала.
    Каждый ответ принимается на сервере и записывается в статистику.
4)  После прохождения теста и возвращения на страницу выбора, напротив пройденного теста будет отображаться статистика.
5)  Если пользователь не авторизован, его встречает страница логина. если нет логина, можно перейти на форму регистрации.

Админка:
1)  Админка. Стандартная админка Django. Разделы:
2)  Стандартный раздел пользователей
3)  Раздел с наборами тестов
4)  Возможность на странице набора тестов добавлять вопросы/ответы к вопросам/отмечать правильные ответы
5)  Валидация на то, что должен быть хотябы 1 правильный вариант
6)  Валидация на то, что все варианты не могут быть правильными
7)  Удаление вопросов/вариантов ответов/изменение правильных решений при редактировании тестового набора



Приложение управления подарочными картами:
1)  Генерация карт. необходимо задать серию, количество, дату начала действия, срок и баланс.
    Сгенерированные карыт будут иметь порядновый номер от 1 до количества введённых карт.
2)  Проверка просроченных карт. помечает просроченные карты в БД
3)  Отключение просроченных карт, отключает карты помесенные в БД как просроченные.
4)  Отключить выбранные карты. Отмечаем чекбоксами карты, при нажатии выбранные карты отключатся.
5)  Включить выбранные карты. Отмечаем чекбоксами карты, при нажатии выбранные карты активируются.
6)  Посмотреть историю. Отмечаем чекбоксами карты, при нажатии переводит на другую страницу с логом истоии карт.
7)  Списание/Ввод средств. при заполненом поле справа начислает либо списывает с баланса карты указанную сумму.
    при достижении нулевого баланса карта отключается и в историю идут запись о погашении и деактивации.

Админка, стандартная.
при выборе в админке в форму идут inline записи истории.


Добавлен settings_local в который можно вносить свои настройки.
ключи хранятся в .env и извлекаются через python-dotenv и имеют приоритет перед окружением среды.
Настройки и .env так же размещены на на github, т.к. это тестовое задание.

Посмостреть можно в данный момент по этому адресу http://79.133.182.118:8001/
пароль логин/админки admin/admin

либо собрать свой контейнер. для этого должен быть установлен docker и docker-compose.
1) git clone https://github.com/eldalex/avdeev_case
2) cd cd /avdeev_case/avdeev/
3) docker-compose up -d
Порт можно поменять в docker-compose.yml
логин пароль админки заливается в момент создания контейнера фикстурами. admin/admin
